<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KASUSA</title>
    <link>https://kasusa.github.io/hugo/</link>
    <description>Recent content on KASUSA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kasusa.github.io/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>视频网站集</title>
      <link>https://kasusa.github.io/hugo/post/20210118%E8%A7%86%E9%A2%91%E7%BD%91%E7%AB%99%E9%9B%86/</link>
      <pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/20210118%E8%A7%86%E9%A2%91%E7%BD%91%E7%AB%99%E9%9B%86/</guid>
      <description>正规站 bilibili https://www.bilibili.com/
netflix https://www.netflix.com/browse
正常剧  低端影视 https://ddrk.me/ 奈飞影视 https://www.nfmovies.com/  动画片  紫可可 http://zikeke.net/ AGE FANS https://www.agefans.cc/  短视频  Coub https://coub.com/ 开眼 https://home.eyepetizer.net/  emmm  X video https://www.xvideos.com/ Sex.com https://www.sex.com/ PornHub https://cn.pornhub.com/  </description>
      <content>&lt;h3 id=&#34;正规站&#34;&gt;正规站&lt;/h3&gt;
&lt;p&gt;bilibili &lt;a href=&#34;https://www.bilibili.com/&#34;&gt;https://www.bilibili.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;netflix &lt;a href=&#34;https://www.netflix.com/browse&#34;&gt;https://www.netflix.com/browse&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;正常剧&#34;&gt;正常剧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;低端影视 &lt;a href=&#34;https://ddrk.me/&#34;&gt;https://ddrk.me/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;奈飞影视 &lt;a href=&#34;https://www.nfmovies.com/&#34;&gt;https://www.nfmovies.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;动画片&#34;&gt;动画片&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;紫可可 &lt;a href=&#34;http://zikeke.net/&#34;&gt;http://zikeke.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AGE FANS &lt;a href=&#34;https://www.agefans.cc/&#34;&gt;https://www.agefans.cc/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;短视频&#34;&gt;短视频&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Coub &lt;a href=&#34;https://coub.com/&#34;&gt;https://coub.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;开眼 &lt;a href=&#34;https://home.eyepetizer.net/&#34;&gt;https://home.eyepetizer.net/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;emmm&#34;&gt;emmm&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;X video &lt;a href=&#34;https://www.xvideos.com/&#34;&gt;https://www.xvideos.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sex.com &lt;a href=&#34;https://www.sex.com/&#34;&gt;https://www.sex.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PornHub &lt;a href=&#34;https://cn.pornhub.com/&#34;&gt;https://cn.pornhub.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>win10 DPI FIX</title>
      <link>https://kasusa.github.io/hugo/post/2021-6-22/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/2021-6-22/</guid>
      <description>Windows10 DPI Fix http://windows10-dpi-fix.xpexplorer.com/
这个软件的功能是修复win10在缩放125%的情况下产生的字体模糊。
他的原理是调用win7/8.1的缩放DPI，这个老的DPI是专门为电脑设计的。而win10当时有向移动端发展的想法，便用了一个新的缩放dpi，为了照顾手机的性能，缩放之后还会变模糊，我想这才是我真正讨厌缩放的原因吧。但是不缩放15寸小屏幕很瞎眼。
这个应用真的很好地解决了我的缩放问题，在此推荐给所有人。</description>
      <content>&lt;h2 id=&#34;windows10-dpi-fix&#34;&gt;Windows10 DPI Fix&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://windows10-dpi-fix.xpexplorer.com/&#34;&gt;http://windows10-dpi-fix.xpexplorer.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个软件的功能是修复win10在缩放125%的情况下产生的字体模糊。&lt;/p&gt;
&lt;p&gt;他的原理是调用win7/8.1的缩放DPI，这个老的DPI是专门为电脑设计的。而win10当时有向移动端发展的想法，便用了一个新的缩放dpi，为了照顾手机的性能，缩放之后还会变模糊，我想这才是我真正讨厌缩放的原因吧。但是不缩放15寸小屏幕很瞎眼。&lt;/p&gt;
&lt;p&gt;这个应用真的很好地解决了我的缩放问题，在此推荐给所有人。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tva1.sinaimg.cn/large/006rgJELgy1grqsxs460dj30d1060q4e.jpg&#34; alt=&#34;程序截图&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>c#文件管理器、读取文件列表</title>
      <link>https://kasusa.github.io/hugo/post/csharp%E6%89%93%E5%BC%80%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E9%80%89%E5%AE%9A%E6%96%87%E4%BB%B6/</link>
      <pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/csharp%E6%89%93%E5%BC%80%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E9%80%89%E5%AE%9A%E6%96%87%E4%BB%B6/</guid>
      <description>打开文件夹和选择其中某一项
private void openExplorer() { string FilePath = Directory.GetCurrentDirectory(); //打开文件夹并选中文件  System.Diagnostics.Process.Start(&amp;#34;Explorer&amp;#34;, &amp;#34;/select,&amp;#34; + FilePath + &amp;#34;\\&amp;#34; + &amp;#34;infolist.xml&amp;#34;); //仅打开文件夹  System.Diagnostics.Process.Start(FilePath); } 读取某位置的指定后缀文件（列表），把名字存入combobox
//读取xml文件，填充combobox列表 public void getCombobox() { comboBox1.Items.Clear(); //获取当前程序目录，获取所有xml文件绝对地址  var files = Directory .GetFiles(Directory.GetCurrentDirectory(), &amp;#34;*.xml&amp;#34;); //提取路径地址+/为了在后面把完整路径剔除  string pathstr = Directory.GetCurrentDirectory()+&amp;#34;\\&amp;#34; ; int count = 0; foreach (var file in files) { //逐个把文件名放在combox中  comboBox1.Items.Add(file.ToString().Replace(pathstr, &amp;#34;&amp;#34;)); count++; } toolStripStatusLabel1.Text = $&amp;#34;读取到了【{count}】个xml文件。&amp;#34;; } </description>
      <content>&lt;p&gt;打开文件夹和选择其中某一项&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; openExplorer()
{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; FilePath = Directory.GetCurrentDirectory();
  &lt;span style=&#34;color:#75715e&#34;&gt;//打开文件夹并选中文件
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  System.Diagnostics.Process.Start(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Explorer&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/select,&amp;#34;&lt;/span&gt; + FilePath + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\&amp;#34;&lt;/span&gt; + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;infolist.xml&amp;#34;&lt;/span&gt;); 
  &lt;span style=&#34;color:#75715e&#34;&gt;//仅打开文件夹
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  System.Diagnostics.Process.Start(FilePath);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;读取某位置的指定后缀文件（列表），把名字存入combobox&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//读取xml文件，填充combobox列表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; getCombobox()
{
  comboBox1.Items.Clear();
&lt;span style=&#34;color:#75715e&#34;&gt;//获取当前程序目录，获取所有xml文件绝对地址
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; files = Directory
    .GetFiles(Directory.GetCurrentDirectory(), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.xml&amp;#34;&lt;/span&gt;);
  &lt;span style=&#34;color:#75715e&#34;&gt;//提取路径地址+/为了在后面把完整路径剔除
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; pathstr = Directory.GetCurrentDirectory()+&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\&amp;#34;&lt;/span&gt; ;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; file &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; files)
  {
    &lt;span style=&#34;color:#75715e&#34;&gt;//逐个把文件名放在combox中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    comboBox1.Items.Add(file.ToString().Replace(pathstr, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;));
    count++;
  }
  toolStripStatusLabel1.Text = &lt;span style=&#34;color:#e6db74&#34;&gt;$&amp;#34;读取到了【{count}】个xml文件。&amp;#34;&lt;/span&gt;;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>winform适配dpi</title>
      <link>https://kasusa.github.io/hugo/post/winform%E9%80%82%E9%85%8Ddpi/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/winform%E9%80%82%E9%85%8Ddpi/</guid>
      <description>https://zhuanlan.zhihu.com/p/128588859
在项目中添加一个：应用程序清单文件
在清单文件app.manifest的 &amp;lt;/assembly&amp;gt; 标签下添加
&amp;lt;application xmlns=&amp;#34;urn:schemas-microsoft-com:asm.v3&amp;#34;&amp;gt; &amp;lt;windowsSettings&amp;gt; &amp;lt;dpiAware xmlns=&amp;#34;http://schemas.microsoft.com/SMI/2005/WindowsSettings&amp;#34;&amp;gt;true&amp;lt;/dpiAware&amp;gt; &amp;lt;/windowsSettings&amp;gt; &amp;lt;/application&amp;gt; 适配DPI之后，即便是电脑dpi为缩放的情况下， 仍然可以清晰的显示文字。</description>
      <content>&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/128588859&#34;&gt;https://zhuanlan.zhihu.com/p/128588859&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在项目中添加一个：&lt;strong&gt;应用程序清单文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在清单文件&lt;code&gt;app.manifest&lt;/code&gt;的 &lt;code&gt;&amp;lt;/assembly&amp;gt;&lt;/code&gt; 标签下添加&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;application&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urn:schemas-microsoft-com:asm.v3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;windowsSettings&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dpiAware&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://schemas.microsoft.com/SMI/2005/WindowsSettings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dpiAware&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/windowsSettings&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/application&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;适配DPI之后，即便是电脑dpi为缩放的情况下， 仍然可以清晰的显示文字。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>归档辅助小程序</title>
      <link>https://kasusa.github.io/hugo/post/%E5%BD%92%E6%A1%A3%E8%BE%85%E5%8A%A9%E5%B0%8F%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Wed, 02 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/%E5%BD%92%E6%A1%A3%E8%BE%85%E5%8A%A9%E5%B0%8F%E7%A8%8B%E5%BA%8F/</guid>
      <description>最近写了一个工作用的小程序：https://github.com/kasusa/archive_helper
然后从开始写到现在大概花了5小时左右。用到了系统剪切板、listbox、object序列化并存储为xml、打开指定文件夹并选中指定文件。还有就是一些winform上的设计。
你可以看到右下角的按钮，我感觉把那几个按钮摆在那个位置真的是太天才了，而且那些个按钮都是emoji，并没有用图片，整个程序仍然很小巧。</description>
      <content>&lt;p&gt;最近写了一个工作用的小程序：&lt;a href=&#34;https://github.com/kasusa/archive_helper&#34;&gt;https://github.com/kasusa/archive_helper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://tva2.sinaimg.cn/large/0083vuQJgy1gr3z92ku8wj30mg0blq3h.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后从开始写到现在大概花了5小时左右。用到了系统剪切板、listbox、object序列化并存储为xml、打开指定文件夹并选中指定文件。还有就是一些winform上的设计。&lt;/p&gt;
&lt;p&gt;你可以看到右下角的按钮，我感觉把那几个按钮摆在那个位置真的是太天才了，而且那些个按钮都是emoji，并没有用图片，整个程序仍然很小巧。&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>linkedlist删除指定值</title>
      <link>https://kasusa.github.io/hugo/post/linkedlist%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E5%80%BC/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/linkedlist%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E5%80%BC/</guid>
      <description>info是我自己定义的一个类。
下面是如何删除linklist中指定item的办法。
LinkedList&amp;lt;info&amp;gt; infolist = new LinkedList&amp;lt;info&amp;gt;(); string todelete = &amp;#34;1&amp;#34;; info tmpitem = new info(); foreach (var item in infolist) { if (item.no == todelete) tmpitem = item; } infolist.Remove(tmpitem); </description>
      <content>&lt;p&gt;info是我自己定义的一个类。&lt;/p&gt;
&lt;p&gt;下面是如何删除linklist中指定item的办法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;LinkedList&amp;lt;info&amp;gt; infolist = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; LinkedList&amp;lt;info&amp;gt;();

&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; todelete = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;;

info tmpitem = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; info();
&lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; item &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; infolist)
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (item.no == todelete)
        tmpitem = item;
}
infolist.Remove(tmpitem);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>保存object到xml</title>
      <link>https://kasusa.github.io/hugo/post/%E4%BF%9D%E5%AD%98%E4%BB%BB%E6%84%8Fobject%E5%88%B0%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/%E4%BF%9D%E5%AD%98%E4%BB%BB%E6%84%8Fobject%E5%88%B0%E6%96%87%E4%BB%B6/</guid>
      <description>对实体类做标记  [DataContract] 标记在class前。
 [DataMember] 标记在需要保存的属性前。
[DataContract] public class Car { [DataMember] public string name; [DataMember] double power; [DataMember] List&amp;lt;Wheel&amp;gt; wheels; } 拷贝这两个函数 保存：保存文件到xml，文件目录和程序目录相同，文件名自定。
读取：从指定文件名读取。
static void SaveViaDataContractSerialization&amp;lt;T&amp;gt;(T serializableObject, string filepath) { var serializer = new DataContractSerializer(typeof(T)); var settings = new XmlWriterSettings() { Indent = true, IndentChars = &amp;#34;\t&amp;#34;, }; var writer = XmlWriter.Create(filepath, settings); serializer.WriteObject(writer, serializableObject); writer.Close(); } static T LoadViaDataContractSerialization&amp;lt;T&amp;gt;(string filepath) { var fileStream = new FileStream(filepath, FileMode.</description>
      <content>&lt;h2 id=&#34;对实体类做标记&#34;&gt;对实体类做标记&lt;/h2&gt;
&lt;p&gt;&lt;code&gt; [DataContract]&lt;/code&gt; 标记在class前。&lt;/p&gt;
&lt;p&gt;&lt;code&gt; [DataMember]&lt;/code&gt; 标记在需要保存的属性前。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt; [DataContract]&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Car&lt;/span&gt;
{
&lt;span style=&#34;color:#a6e22e&#34;&gt;  [DataMember]&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; name;
&lt;span style=&#34;color:#a6e22e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;  [DataMember]&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;double&lt;/span&gt; power;
&lt;span style=&#34;color:#a6e22e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;  [DataMember]&lt;/span&gt;
  List&amp;lt;Wheel&amp;gt; wheels;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;拷贝这两个函数&#34;&gt;拷贝这两个函数&lt;/h2&gt;
&lt;p&gt;保存：保存文件到xml，文件目录和程序目录相同，文件名自定。&lt;/p&gt;
&lt;p&gt;读取：从指定文件名读取。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; SaveViaDataContractSerialization&amp;lt;T&amp;gt;(T serializableObject, &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; filepath)
{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; serializer = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DataContractSerializer(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt;(T));
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; settings = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; XmlWriterSettings()
  {
    Indent = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
    IndentChars = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\t&amp;#34;&lt;/span&gt;,
  };
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; writer = XmlWriter.Create(filepath, settings);
  serializer.WriteObject(writer, serializableObject);
  writer.Close();
}


&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; T LoadViaDataContractSerialization&amp;lt;T&amp;gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; filepath)
{
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; fileStream = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FileStream(filepath, FileMode.Open);
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; reader = XmlDictionaryReader.CreateTextReader(fileStream, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; XmlDictionaryReaderQuotas());
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; serializer = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; DataContractSerializer(&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt;(T));
  T serializableObject = (T)serializer.ReadObject(reader, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);
  reader.Close();
  fileStream.Close();
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; serializableObject;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;读取方法&#34;&gt;读取方法&lt;/h2&gt;
&lt;p&gt;使用上面两个方法来读取和存储&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Save single object
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Car bmw = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Car(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;BMW&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&amp;gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Left&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Right&amp;#34;&lt;/span&gt; });    &lt;span style=&#34;color:#75715e&#34;&gt;// create object
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;SaveViaDataContractSerialization(bmw, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bmw.xml&amp;#34;&lt;/span&gt;);                       &lt;span style=&#34;color:#75715e&#34;&gt;// save object
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;bmw = &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;                                                             &lt;span style=&#34;color:#75715e&#34;&gt;// delete object
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;bmw = LoadViaDataContractSerialization&amp;lt;Car&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bmw.xml&amp;#34;&lt;/span&gt;);                 &lt;span style=&#34;color:#75715e&#34;&gt;// reload object
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Console.WriteLine(bmw.ToString());                                      &lt;span style=&#34;color:#75715e&#34;&gt;// print object
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;// Save list of objects
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;List&amp;lt;Car&amp;gt; carList = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List&amp;lt;Car&amp;gt;                                       &lt;span style=&#34;color:#75715e&#34;&gt;// create object list
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{
&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Car(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Porsche&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&amp;gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Left&amp;#34;&lt;/span&gt; }),
&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Car(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mercedes&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&amp;gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Front&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Back&amp;#34;&lt;/span&gt; }),
&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Car(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Aston Martin&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; List&amp;lt;&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;&amp;gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Front&amp;#34;&lt;/span&gt; })
};
SaveViaDataContractSerialization(carList, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cars.xml&amp;#34;&lt;/span&gt;);                  &lt;span style=&#34;color:#75715e&#34;&gt;// save object list
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;carList = &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;                                                         &lt;span style=&#34;color:#75715e&#34;&gt;// delete object list
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;carList = LoadViaDataContractSerialization&amp;lt;List&amp;lt;Car&amp;gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cars.xml&amp;#34;&lt;/span&gt;);      &lt;span style=&#34;color:#75715e&#34;&gt;// reload object list
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; carList)                                              &lt;span style=&#34;color:#75715e&#34;&gt;// print object list
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Console.WriteLine(a.ToString());

Console.ReadLine();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;原视频：&lt;a href=&#34;https://www.youtube.com/watch?v=GzZu3eYDBmM&#34;&gt;https://www.youtube.com/watch?v=GzZu3eYDBmM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;demo代码：&lt;a href=&#34;https://pastebin.com/mRTmdiK5&#34;&gt;https://pastebin.com/mRTmdiK5&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>corntab计划任务</title>
      <link>https://kasusa.github.io/hugo/post/corntab-%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/corntab-%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</guid>
      <description>corntab 设置corntab任务，使用默认编辑器
corntab -e 设置默认编辑器
select-editor 设置任务，每天2：00执行
0 2 * * * /home/saber/DDREPORT/ddrp.sh</description>
      <content>&lt;h1 id=&#34;corntab&#34;&gt;corntab&lt;/h1&gt;
&lt;p&gt;设置corntab任务，使用默认编辑器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;corntab -e 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置默认编辑器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select-editor 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;设置任务，每天2：00执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0 2 * * * /home/saber/DDREPORT/ddrp.sh
&lt;/code&gt;&lt;/pre&gt;</content>
    </item>
    
    <item>
      <title>hugo博客</title>
      <link>https://kasusa.github.io/hugo/post/hugo-newblog/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/hugo-newblog/</guid>
      <description>剧情介绍  今天yr在我旁边弄新的hugo主题，我感觉他的新主题真的很清新，很不错，然后markdown记录之类的确实要比转化成html再放出来更加简单。不过可定制性没有那么好也是实话。
这个博客对于语法高亮支持很不错。交互和动画就只能限制于模板（这个语法蛮怪的，可能以后会研究一个自己的模板）所以暂时决定把这个弄成技术类博客。
我终于能把我的linux小知识都搬过来了！
 //简单说一下hugo的安装和使用：
pwershell安装hugo choco install hugo
创建hugo工作目录 hugo new site mysite
进入themes文件夹并且git pull自己用的主题 git clone https://github.com/panr/hugo-theme-terminal.git themes/terminal
 主题市场 terminal主题(我现在用的)  配置主题 配置主题需要根据不同的主题情况,各有不同，对于我这个主题来说我要把博客官方的 config.toml 粘贴到hugo项目中，并且进行了一点修改。遇到了一点坑，我在后面注释，你可以看一下。
toml文件：
baseurl = &amp;#34;&amp;#34; #这个要设为空，否则生成的东西css会找不到。 languageCode = &amp;#34;en-us&amp;#34; theme = &amp;#34;terminal&amp;#34; # theme 原本github上提供的版本是 &amp;#34;hugo-theme-terminal&amp;#34;， # 但是会造成编译错误，故修改 paginate = 5 [params] contentTypeName = &amp;#34;post&amp;#34; themeColor = &amp;#34;red&amp;#34; #选择主题 showMenuItems = 2 #选择显示在顶部的导航链接数目，超出的会折叠。 #链接具体目录可以在下面修改 fullWidthTheme = false centerTheme = false [languages] [languages.</description>
      <content>&lt;p&gt;&lt;img src=&#34;https://tvax1.sinaimg.cn/large/0083vuQJgy1gqzlm00z45j30hs06z0sq.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;剧情介绍&#34;&gt;剧情介绍&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;今天yr在我旁边弄新的hugo主题，我感觉他的新主题真的很清新，很不错，然后markdown记录之类的确实要比转化成html再放出来更加简单。不过可定制性没有那么好也是实话。&lt;/p&gt;
&lt;p&gt;这个博客对于语法高亮支持很不错。交互和动画就只能限制于模板（这个语法蛮怪的，可能以后会研究一个自己的模板）所以暂时决定把这个弄成技术类博客。&lt;/p&gt;
&lt;p&gt;我终于能把我的linux小知识都搬过来了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;//简单说一下hugo的安装和使用：&lt;/p&gt;
&lt;h3 id=&#34;pwershell安装hugo&#34;&gt;pwershell安装hugo&lt;/h3&gt;
&lt;p&gt;choco install hugo&lt;/p&gt;
&lt;h3 id=&#34;创建hugo工作目录&#34;&gt;创建hugo工作目录&lt;/h3&gt;
&lt;p&gt;hugo new site mysite&lt;/p&gt;
&lt;h3 id=&#34;进入themes文件夹并且git-pull自己用的主题&#34;&gt;进入themes文件夹并且git pull自己用的主题&lt;/h3&gt;
&lt;p&gt;git clone &lt;a href=&#34;https://github.com/panr/hugo-theme-terminal.git&#34;&gt;https://github.com/panr/hugo-theme-terminal.git&lt;/a&gt; themes/terminal&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;主题市场&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/panr/hugo-theme-terminal/&#34;&gt;terminal主题(我现在用的)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置主题&#34;&gt;配置主题&lt;/h3&gt;
&lt;p&gt;配置主题需要根据不同的主题情况,各有不同，对于我这个主题来说我要把博客官方的 &lt;code&gt;config.toml&lt;/code&gt; 粘贴到hugo项目中，并且进行了一点修改。遇到了一点坑，我在后面注释，你可以看一下。&lt;/p&gt;
&lt;p&gt;toml文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;baseurl&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#这个要设为空，否则生成的东西css会找不到。&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;languageCode&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en-us&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;terminal&amp;#34;&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;# theme 原本github上提供的版本是 &amp;#34;hugo-theme-terminal&amp;#34;，&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# 但是会造成编译错误，故修改&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;paginate&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;

[&lt;span style=&#34;color:#a6e22e&#34;&gt;params&lt;/span&gt;]
  &lt;span style=&#34;color:#a6e22e&#34;&gt;contentTypeName&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;themeColor&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#选择主题&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;showMenuItems&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 
  &lt;span style=&#34;color:#75715e&#34;&gt;#选择显示在顶部的导航链接数目，超出的会折叠。&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;#链接具体目录可以在下面修改&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;fullWidthTheme&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;centerTheme&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;

[&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;]
  [&lt;span style=&#34;color:#a6e22e&#34;&gt;languages&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;en&lt;/span&gt;]
    &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;KASUSA&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;subtitle&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kasusa的技术博客&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;keywords&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;copyright&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;menuMore&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;展开&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;readMore&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;品读&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;readOtherPosts&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;看看别的文章
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    [languages.en.params.logo]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      logoText = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;KASUSA&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      logoHomeLink = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    [languages.en.menu] #顶部栏条目们（不知道顺序是按照什么计算的）
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      [[languages.en.menu.main]] #一个顶部栏条目
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        identifier = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;about&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; #id
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;About_theme&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; #顶部条目显示为什么文字
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        url = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;about&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; #点击后进入什么目录
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      [[languages.en.menu.main]]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        identifier = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;showcase&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Showcase&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        url = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;showcase&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;写博客&#34;&gt;写博客&lt;/h3&gt;
&lt;p&gt;在 content - posts 内新建md文件，系统会用mdmd文件内容生成博客。&lt;/p&gt;
&lt;p&gt;对于md文件顶部的格式有着特殊的要求，这个也是因主体而异的，具体的话就要参考你的&lt;code&gt;theme&lt;/code&gt;中&lt;code&gt;archetypes&lt;/code&gt;文件夹内提供的模板了。我这个主题提供的模板如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;+++
title = &amp;#34;hugo博客&amp;#34; 
date = &amp;#34;2021-05-29&amp;#34;
author = &amp;#34;kasusa&amp;#34;
cover = &amp;#34;https://tvax1.sinaimg.cn/...&amp;#34;
tags = [&amp;#34;博客&amp;#34;, &amp;#34;hugo&amp;#34;]
keywords = [&amp;#34;hugo2&amp;#34;, &amp;#34;&amp;#34;]
description = &amp;#34;今天我建立了我的hugo博客&amp;#34;
showFullContent = false
+++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我感觉他已经很明白了，但是我遇到了一个坑就是日期，我打成了2021-5-29在预览的时候就会显示成00-01-00，要注意日期格式必须相同哦！&lt;/p&gt;
&lt;h3 id=&#34;实时预览&#34;&gt;实时预览&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo server -t terminal -p 51000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-t&lt;/code&gt;是自定义主题，&lt;code&gt;-p&lt;/code&gt;是自定义端口，开启成功之后他会根据你后台文件的变化不停的刷新，你可以在&lt;/p&gt;
&lt;p&gt;&lt;code&gt;localhost:51000&lt;/code&gt; 实时的预览。&lt;/p&gt;
&lt;h3 id=&#34;编译生成html&#34;&gt;编译生成HTML&lt;/h3&gt;
&lt;p&gt;在你的项目的目录输入命令（生成到指定目录）：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo -d C:\Users\kasusa\Documents\GitHub\kasusa.github.io\hugo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;默认的话文件会生成在&lt;code&gt;public&lt;/code&gt;文件夹。&lt;/p&gt;
&lt;p&gt;然后就把public文件夹的内容上传到github即可。以后也许会考虑 &lt;a href=&#34;https://yantree.github.io/posts/develop/2020-06-20-action-delopy-github-page/&#34;&gt;使用action自动编译&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>shell</title>
      <link>https://kasusa.github.io/hugo/post/shell/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/shell/</guid>
      <description>菜鸟shell教程
Shell 命令脚本 Shell 脚本文件的名称可以任意，建议将.sh 后缀加上，以表示是一个脚本文件。
 创建脚本：vim example.sh 写好脚本的内容（就是连串的shell语句） 执行脚本：（后面的是参数）   bash example.sh sh example.sh ./example.sh  （一般会有权限不足的报错，升权限就好了）    简单的脚本 #!/bin/bash #For Example BY linuxprobe.com pwd ls -al 在上面的这个 example.sh 脚本中实际上出现了三种不同的元素：
 第一行的脚本声明（#!）用来告诉系统使用哪种 Shell 解释器来执行该脚本； 第二行的注释信息（#）是对脚本功能和某些命令的介绍信息，使得自己或他人在日后看到这个脚本内容时，可以快速知道该脚本的作用或一些警告信息； 第三、四行的可执行语句也就是我们平时执行的 Linux 命令了。  带参数的脚本-接收参数 如何运行带参数的脚本：
sh example.sh one two three four five six脚本内容：
#!/bin/bash echo &amp;#34;当前脚本名称为$0&amp;#34; echo &amp;#34;总共有$#个参数，分别是$*。&amp;#34; echo &amp;#34;第 1 个参数为$1，第 5 个为$5。&amp;#34;    ~ ~     $0 对应的是当前 Shell 脚本程序的名称，   $# 对应的是总共有几个参数   $* 对应的是所有位置的参数值   $?</description>
      <content>&lt;p&gt;&lt;a href=&#34;https://www.runoob.com/linux/linux-shell-variable.html&#34;&gt;菜鸟shell教程&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;shell-命令脚本&#34;&gt;Shell 命令脚本&lt;/h1&gt;
&lt;p&gt;Shell 脚本文件的名称可以任意，建议将.sh 后缀加上，以表示是一个脚本文件。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建脚本：&lt;code&gt;vim example.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;写好脚本的内容（就是连串的shell语句）&lt;/li&gt;
&lt;li&gt;执行脚本：（后面的是参数）
&lt;ul&gt;
&lt;li&gt;&lt;code&gt; bash example.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sh example.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;./example.sh &lt;/code&gt; （一般会有权限不足的报错，升权限就好了）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;简单的脚本&#34;&gt;简单的脚本&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#For Example BY linuxprobe.com&lt;/span&gt;
pwd
ls -al
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上面的这个 example.sh 脚本中实际上出现了三种不同的元素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一行的脚本声明（#!）用来告诉系统使用哪种 Shell 解释器来执行该脚本；&lt;/li&gt;
&lt;li&gt;第二行的注释信息（#）是对脚本功能和某些命令的介绍信息，使得自己或他人在日后看到这个脚本内容时，可以快速知道该脚本的作用或一些警告信息；&lt;/li&gt;
&lt;li&gt;第三、四行的可执行语句也就是我们平时执行的 Linux 命令了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;带参数的脚本-接收参数&#34;&gt;带参数的脚本-接收参数&lt;/h2&gt;
&lt;p&gt;如何运行带参数的脚本：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh example.sh one two three four five six
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;脚本内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;当前脚本名称为&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;总共有&lt;/span&gt;$#&lt;span style=&#34;color:#e6db74&#34;&gt;个参数，分别是&lt;/span&gt;$*&lt;span style=&#34;color:#e6db74&#34;&gt;。&amp;#34;&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;第 1 个参数为&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;，第 5 个为&lt;/span&gt;$5&lt;span style=&#34;color:#e6db74&#34;&gt;。&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;~&lt;/th&gt;
&lt;th&gt;~&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$0&lt;/td&gt;
&lt;td&gt;对应的是当前 Shell 脚本程序的名称，&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$#&lt;/td&gt;
&lt;td&gt;对应的是总共有几个参数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$*&lt;/td&gt;
&lt;td&gt;对应的是所有位置的参数值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$?&lt;/td&gt;
&lt;td&gt;对应的是显示上一次命令的执行返回值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$1、$2、$3&lt;/td&gt;
&lt;td&gt;则分别对应着第 N 个位置的参数值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;带参数的脚本-判断用户的参数&#34;&gt;带参数的脚本-判断用户的参数&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-d&lt;/td&gt;
&lt;td&gt;测试文件是否为目录类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-e&lt;/td&gt;
&lt;td&gt;测试文件是否存在&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-f&lt;/td&gt;
&lt;td&gt;判断是否为一般文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-r&lt;/td&gt;
&lt;td&gt;测试当前用户是否有权限读取&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-w&lt;/td&gt;
&lt;td&gt;测试当前用户是否有权限写入&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-x&lt;/td&gt;
&lt;td&gt;测试当前用户是否有权限执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;0代表存在，否则不存在&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;例子： 下面使用文件测试语句来判断/etc/fstab 是否为一个目录类型的文件，然后通过 Shell 解释器的内设$?变量显示上一条命令执行后的返回值。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@KASUSA-cloud:~# [ -f mydir ]
root@KASUSA-cloud:~# echo $?
1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;符号符号&#34;&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;符号,&lt;code&gt;||&lt;/code&gt;符号&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;amp;&amp;amp;，它表示当前面的命令执行成功后才会执行它后面的命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;判断目录是否存在：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -e mydir &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exist&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;表示当前面的命令执行失败后才会执行它后面的命令，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此可以用来结合系统环境变量 USER 来判断当前登录的用户是否为非管理员身份：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $USER &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一个复杂一点的判断用户的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ! $USER &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;运算比较符&#34;&gt;运算比较符&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;运算符&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-eq&lt;/td&gt;
&lt;td&gt;是否等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ne&lt;/td&gt;
&lt;td&gt;是否不等于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-gt&lt;/td&gt;
&lt;td&gt;是否大于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-lt&lt;/td&gt;
&lt;td&gt;是否小于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-le&lt;/td&gt;
&lt;td&gt;是否等于或小于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-ge&lt;/td&gt;
&lt;td&gt;是否大于或等于&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;流程控制语句&#34;&gt;流程控制语句&lt;/h2&gt;
&lt;h3 id=&#34;if-条件测试语句&#34;&gt;if 条件测试语句&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/0083vuQJly1gbmzfmixtrj30eh05t3z5.jpg&#34; alt=&#34;if&#34;&gt;
&lt;img src=&#34;http://ww1.sinaimg.cn/large/0083vuQJly1gbmzhnsu8uj30g9074jsb.jpg&#34; alt=&#34;if else if&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;for-条件循环语句&#34;&gt;for 条件循环语句&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/0083vuQJly1gbmzpen0wwj30ev05fmxp.jpg&#34; alt=&#34;for1&#34;&gt;&lt;/p&gt;
&lt;p&gt;批量创建用户脚本：
创建 user.txt&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim users.txt
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;andy
barry
carl
duke
eric
george
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建脚本 Example.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; vim Example.sh
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enter The Users Password : &amp;#34;&lt;/span&gt; PASSWD
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; UNAME in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat users.txt&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
  id $UNAME &amp;amp;&amp;gt; /dev/null
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Already exists&amp;#34;&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
        useradd $UNAME &amp;amp;&amp;gt; /dev/null
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PASSWD&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | passwd --stdin $UNAME &amp;amp;&amp;gt; /dev/null
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$UNAME&lt;span style=&#34;color:#e6db74&#34;&gt; , Create success&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$UNAME&lt;span style=&#34;color:#e6db74&#34;&gt; , Create failure&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;需要多说一句，/dev/null 是一个被称作 Linux 黑洞的文件，把输出信息重定向到这个文件等同于删除数据（类似于没有回收功能的垃圾箱），可以让用户的屏幕窗口保持简洁。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;while-条件循环语句&#34;&gt;while 条件循环语句&lt;/h3&gt;
&lt;p&gt;执行前并不确定最终执行的次数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://ww1.sinaimg.cn/large/006rgJELly1gbwy6ok0x4j306q04874d.jpg&#34; alt=&#34;sshot-2020-02-15-[1].png&#34;&gt;&lt;/p&gt;
&lt;p&gt;例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#在CASE变量小于等于20的时候一直运行&lt;/span&gt;
CASE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;                  &lt;span style=&#34;color:#75715e&#34;&gt;#初始化变量&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;case = &lt;/span&gt;$CASE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;#显示变量&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $CASE -le &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#while条件&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;                      &lt;span style=&#34;color:#75715e&#34;&gt;#while开始&lt;/span&gt;
CASE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;expr $CASE + 1&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;#相当于CASE++&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;case = &lt;/span&gt;$CASE&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;#显示下CASE的值&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;                    &lt;span style=&#34;color:#75715e&#34;&gt;#结束&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>ubuntu上安装java</title>
      <link>https://kasusa.github.io/hugo/post/ubuntu-install-java/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/ubuntu-install-java/</guid>
      <description>ubuntu 安装 java 最好的教程：https://docs.datastax.com/en/jdk-install/doc/jdk-install/installOracleJdkDeb.html
steps   去oracle下载你要的java
https://www.oracle.com/java/technologies/javase-downloads.html1.1 一般来说你需要解压之后把文件放在 /usr/lib/jvm 这里是标准的java存放位置
  让系统知道你新装了 java 还有他的位置 (更改后半句的目录为你的java解压路径 最后面的是java config编号)
sudo update-alternatives --install &amp;quot;/usr/bin/java&amp;quot; &amp;quot;java&amp;quot; &amp;quot;/usr/lib/jvm/jdk-15.0.1/bin/java&amp;quot; 1  选择你的新java版本
sudo update-alternatives --config java  测试是否成功
java -version  </description>
      <content>&lt;p&gt;ubuntu 安装 java 最好的教程：https://docs.datastax.com/en/jdk-install/doc/jdk-install/installOracleJdkDeb.html&lt;/p&gt;
&lt;h2 id=&#34;steps&#34;&gt;steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;去oracle下载你要的java&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://www.oracle.com/java/technologies/javase-downloads.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;1.1 一般来说你需要解压之后把文件放在 &lt;code&gt;/usr/lib/jvm&lt;/code&gt; 这里是标准的java存放位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;让系统知道你新装了 java 还有他的位置 (更改后半句的目录为你的java解压路径 最后面的是java config编号)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo update-alternatives --install &amp;quot;/usr/bin/java&amp;quot; &amp;quot;java&amp;quot; &amp;quot;/usr/lib/jvm/jdk-15.0.1/bin/java&amp;quot; 1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择你的新java版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试是否成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;java -version
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>ubuntu安装Qv2ray</title>
      <link>https://kasusa.github.io/hugo/post/linux-v2ray-setup/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/linux-v2ray-setup/</guid>
      <description> replace your source with tuna speed up apt-update : https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/
  this is for ubuntu , but igeuss it will working well on other linux machines too.
  download Qv2ray here: https://github.com/Qv2ray/Qv2ray/releases download v2ray-core here (linux-64 ver):https://github.com/v2ray/v2ray-core/releases before open Appimage file you should give it permission! : chmod 777 * set up subscribe follow this instruction :https://qv2ray.net/getting-started/step3.html#通过订阅地址导入  </description>
      <content>&lt;blockquote&gt;
&lt;p&gt;replace your source with tuna speed up apt-update : &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;this is for ubuntu , but igeuss it will working well on other linux machines too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;download Qv2ray here: &lt;a href=&#34;https://github.com/Qv2ray/Qv2ray/releases&#34;&gt;https://github.com/Qv2ray/Qv2ray/releases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;download v2ray-core here (linux-64 ver):https://github.com/v2ray/v2ray-core/releases&lt;/li&gt;
&lt;li&gt;before open Appimage file you should give it permission! : &lt;code&gt;chmod 777 *&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;set up subscribe follow this instruction :https://qv2ray.net/getting-started/step3.html#通过订阅地址导入&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>ubuntu换源</title>
      <link>https://kasusa.github.io/hugo/post/%E6%8D%A2%E6%BA%90/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/%E6%8D%A2%E6%BA%90/</guid>
      <description>ps：也可以通过内置的software &amp;amp; update来测试和更换中国源
清华： https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ 阿里： https://developer.aliyun.com/mirror/ubuntu</description>
      <content>&lt;p&gt;ps：也可以通过内置的software &amp;amp; update来测试和更换中国源&lt;/p&gt;
&lt;p&gt;清华： &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/&#34;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/&lt;/a&gt;
阿里： &lt;a href=&#34;https://developer.aliyun.com/mirror/ubuntu&#34;&gt;https://developer.aliyun.com/mirror/ubuntu&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>vim</title>
      <link>https://kasusa.github.io/hugo/post/vim/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/vim/</guid>
      <description>vimtutor-ch
快速使用vim:
跳转 行之间的跳转
[n] shift g #跳转到第n行 gg #跳转到第一行 shift g #跳转到最后一行 行内的跳转
~ #切换大小写 w #到下一个单词头部 0 #到行头 $ #到行尾 f &amp;lt;字母&amp;gt; #搜索并跳转到下一个匹配字母 F &amp;lt;字母&amp;gt; #搜索并跳转到上一个匹配字母  复制和粘贴   普通模式中使用y复制
 普通模式中，yy复制游标所在的整行（3yy表示复制3行） 普通模式中，y0 复制至行首。不含光标所在处字符。 普通模式中，y$ 复制至行尾。含光标所在处字符。 普通模式中，yw 复制一个单词。 普通模式中，y2w 复制两个单词。 普通模式中，yG 复制至文本末。 普通模式中，y1G 复制至文本开头。    普通模式中使用 p 粘贴
 普通模式中，p(小写)代表粘贴至光标后（下） 普通模式中，P(大写)代表粘贴至光标前（上）    剪切 使用 d
 dd 剪切一行 [n]dd 剪切n行    替换和撤销(Undo)命令  替换  c 删除并重写一个字母 C 删除并重写从[光标处到末尾]一个字母 cc 删除并重写一行 r 替换一个字母 R 连续的替换字母 撤销 u 一次撤销 U 撤销所有 重做 ctrl + r 重做    缩进 &amp;lt;&amp;lt; #向左侧缩进 &amp;gt;&amp;gt; #向右侧缩进 :set shiftwidth=10 #设置缩进大小为10个空格 :ce #中心对齐 :le #左侧对齐 :ri #右侧对齐  教程 我是在实验楼看到的这个系统自带的教程的.</description>
      <content>&lt;p&gt;&lt;a href=&#34;https://blog.ihipop.info/2011/01/2026.html&#34;&gt;vimtutor-ch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;快速使用vim:&lt;/p&gt;
&lt;h2 id=&#34;跳转&#34;&gt;跳转&lt;/h2&gt;
&lt;p&gt;行之间的跳转&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;n&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; shift g   &lt;span style=&#34;color:#75715e&#34;&gt;#跳转到第n行&lt;/span&gt;
gg            &lt;span style=&#34;color:#75715e&#34;&gt;#跳转到第一行&lt;/span&gt;
shift g       &lt;span style=&#34;color:#75715e&#34;&gt;#跳转到最后一行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;行内的跳转&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;~             &lt;span style=&#34;color:#75715e&#34;&gt;#切换大小写&lt;/span&gt;
w             &lt;span style=&#34;color:#75715e&#34;&gt;#到下一个单词头部&lt;/span&gt;
&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;             &lt;span style=&#34;color:#75715e&#34;&gt;#到行头&lt;/span&gt;
$             &lt;span style=&#34;color:#75715e&#34;&gt;#到行尾&lt;/span&gt;
f &amp;lt;字母&amp;gt;        &lt;span style=&#34;color:#75715e&#34;&gt;#搜索并跳转到下一个匹配字母&lt;/span&gt;
F &amp;lt;字母&amp;gt;        &lt;span style=&#34;color:#75715e&#34;&gt;#搜索并跳转到上一个匹配字母&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;复制和粘贴&#34;&gt;复制和粘贴&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;普通模式中使用y复制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通模式中，yy复制游标所在的整行（3yy表示复制3行）&lt;/li&gt;
&lt;li&gt;普通模式中，y0 复制至行首。不含光标所在处字符。&lt;/li&gt;
&lt;li&gt;普通模式中，y$ 复制至行尾。含光标所在处字符。&lt;/li&gt;
&lt;li&gt;普通模式中，yw 复制一个单词。&lt;/li&gt;
&lt;li&gt;普通模式中，y2w 复制两个单词。&lt;/li&gt;
&lt;li&gt;普通模式中，yG 复制至文本末。&lt;/li&gt;
&lt;li&gt;普通模式中，y1G 复制至文本开头。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;普通模式中使用 p 粘贴&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通模式中，p(小写)代表粘贴至光标后（下）&lt;/li&gt;
&lt;li&gt;普通模式中，P(大写)代表粘贴至光标前（上）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;剪切 使用 d&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dd 剪切一行&lt;/li&gt;
&lt;li&gt;[n]dd 剪切n行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;替换和撤销undo命令&#34;&gt;替换和撤销(Undo)命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;替换
&lt;ul&gt;
&lt;li&gt;c 删除并重写一个字母&lt;/li&gt;
&lt;li&gt;C 删除并重写从[光标处到末尾]一个字母&lt;/li&gt;
&lt;li&gt;cc 删除并重写一行&lt;/li&gt;
&lt;li&gt;r 替换一个字母&lt;/li&gt;
&lt;li&gt;R 连续的替换字母
撤销
u 一次撤销
U 撤销所有
重做
ctrl + r 重做&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缩进&#34;&gt;缩进&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&amp;lt;&amp;lt;  &lt;span style=&#34;color:#75715e&#34;&gt;#向左侧缩进&lt;/span&gt;
&amp;gt;&amp;gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#向右侧缩进&lt;/span&gt;
:set shiftwidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#设置缩进大小为10个空格&lt;/span&gt;

:ce   &lt;span style=&#34;color:#75715e&#34;&gt;#中心对齐&lt;/span&gt;
:le   &lt;span style=&#34;color:#75715e&#34;&gt;#左侧对齐&lt;/span&gt;
:ri   &lt;span style=&#34;color:#75715e&#34;&gt;#右侧对齐&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h1 id=&#34;教程&#34;&gt;教程&lt;/h1&gt;
&lt;p&gt;我是在实验楼看到的这个系统自带的教程的.
感觉还不错的样子。&lt;/p&gt;
&lt;h2 id=&#34;第二讲小结&#34;&gt;第二讲小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;欲从当前光标删除至单字/单词末尾，请输入∶dw&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;欲从当前光标删除至当前行末尾，请输入∶d$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;欲删除整行，请输入∶dd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在正常模式下一个命令的格式是∶&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt; [number]   command   object     或者     command [number]   object
其意是∶
 number - 代表的是命令执行的次数
 command - 代表要做的事情，比如 d 代表删除
 object - 代表要操作的对象，比如 w 代表单字/单词，$ 代表到行末等等。

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;欲撤消以前的操作，请输入∶u (小写的u)
欲撤消在一行中所做的改动，请输入∶U (大写的U)
欲撤消以前的撤消命令，恢复以前的操作结果，请输入∶CTRL-R&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;第三讲小结&#34;&gt;第三讲小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;要重新置入已经删除的文本内容，请输入小写字母 p。该操作可以将已删除
的文本内容置于光标之后。如果最后一次删除的是一个整行，那么该行将置
于当前光标所在行的下一行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要替换光标所在位置的字符，请输入小写的 r 和要替换掉原位置字符的新字
符即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改类命令允许您改变指定的对象，从当前光标所在位置直到对象的末尾。
比如输入 cw 可以替换当前光标到单词的末尾的内容；输入 c$ 可以替换当
前光标到行末的内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更改类命令的格式是∶&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;[number]   c   object        或者      c   [number]   object
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面我们继续学习下一讲。&lt;/p&gt;
&lt;h2 id=&#34;第四讲小结&#34;&gt;第四讲小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ctrl-g 用于显示当前光标所在位置和文件状态信息。Shift-G 用于将光标跳
转至文件最后一行。先敲入一个行号然后按 Shift-G 则是将光标移动至该行
号代表的行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 / 然后紧随一个字符串是则是在当前所编辑的文档中向后查找该字符串。
输入问号 ? 然后紧随一个字符串是则是在当前所编辑的文档中向前查找该字
符串。完成一次查找之后按 n 键则是重复上一次的命令，可在同一方向上查
找下一个字符串所在；或者按 Shift-N 向相反方向查找下该字符串所在。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果光标当前位置是括号(、)、[、]、{、}，按 % 可以将光标移动到配对的
括号上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;在一行内替换头一个字符串 old 为新的字符串 new，请输入  :s/old/new&lt;/li&gt;
&lt;li&gt;在一行内替换所有的字符串 old 为新的字符串 new，请输入  :s/old/new/g&lt;/li&gt;
&lt;li&gt;在两行内替换所有的字符串 old 为新的字符串 new，请输入  :#,#s/old/new/g&lt;/li&gt;
&lt;li&gt;在文件内替换所有的字符串 old 为新的字符串 new，请输入  :%s/old/new/g&lt;/li&gt;
&lt;li&gt;进行全文替换时询问用户确认每个替换需添加 c 选项，请输入 :%s/old/new/gc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;第五讲小结&#34;&gt;第五讲小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;:!command 用于执行一个外部命令 command。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;请看一些实际例子∶
:!dir  -  用于显示当前目录的内容。
:!rm FILENAME  -      用于删除名为 FILENAME 的文件。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;:w FILENAME  可将当前 VIM 中正在编辑的文件保存到名为 FILENAME 的文
件中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;:#,#w FILENAME 可将当前编辑文件第 # 行至第 # 行的内容保存到文件
FILENAME 中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;:r FILENAME 可提取磁盘文件 FILENAME 并将其插入到当前文件的光标位置
后面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;第六讲小结&#34;&gt;第六讲小结&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;输入小写的 o 可以在光标下方打开新的一行并将光标置于新开的行首，进入
插入模式。
输入大写的 O 可以在光标上方打开新的一行并将光标置于新开的行首，进入
插入模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入小写的 a 可以在光标所在位置之后插入文本。
输入大写的 A 可以在光标所在行的行末之后插入文本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入大写的 R 将进入替换模式，直至按 &lt;!-- raw HTML omitted --&gt; 键退出替换模式而进入正常
模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入 :set xxx 可以设置 xxx 选项。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>安装zsh和配置主题</title>
      <link>https://kasusa.github.io/hugo/post/my-zsh/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/my-zsh/</guid>
      <description> zsh 有很多实用功能，下面安装和配置ohmyzsh的教程：
 安装zsh sudo apt install zsh提前安装所需的字体 sudo apt-get install fonts-powerlinepowerline-GitHub
抄国光的作业 sh -c &amp;quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&amp;quot; .zshrc配置  打开配置文件  code .zshrc在.zshrc中加入下面这行( 去掉每行的 username@host )  export DEFAULT_USER=&amp;quot;$(whoami)&amp;quot;ubuntu terminal 配置  profiles-colors 配置主题颜色，要让主题够好看，对比色都强烈 profiles-command 吧zsh代替默认shell，这样每次打开terminal默认就是zsh了！  常用快捷键：    按键 功能 备注     ctrl + - 缩小terminal    ctrl+ shift + +` 放大terminal     </description>
      <content>&lt;blockquote&gt;
&lt;p&gt;zsh 有很多实用功能，下面安装和配置ohmyzsh的教程：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;安装zsh&#34;&gt;安装zsh&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install zsh
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;提前安装所需的字体&#34;&gt;提前安装所需的字体&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install fonts-powerline
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/powerline/fonts&#34;&gt;powerline-GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;抄国光的作业&#34;&gt;抄国光的作业&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sh -c &amp;quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;zshrc配置&#34;&gt;.zshrc配置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;打开配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;code .zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在.zshrc中加入下面这行( 去掉每行的 username@host )&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;export DEFAULT_USER=&amp;quot;$(whoami)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;ubuntu-terminal-配置&#34;&gt;ubuntu terminal 配置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;profiles-colors 配置主题颜色，要让主题够好看，对比色都强烈&lt;/li&gt;
&lt;li&gt;profiles-command 吧zsh代替默认shell，这样每次打开terminal默认就是zsh了！&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常用快捷键&#34;&gt;常用快捷键：&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;-&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;缩小terminal&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ctrl&lt;/code&gt;+ &lt;code&gt;shift + &lt;/code&gt;+`&lt;/td&gt;
&lt;td&gt;放大terminal&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    </item>
    
    <item>
      <title>盒盖不关机</title>
      <link>https://kasusa.github.io/hugo/post/%E7%9B%92%E7%9B%96%E4%B8%8D%E5%85%B3%E6%9C%BA/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/%E7%9B%92%E7%9B%96%E4%B8%8D%E5%85%B3%E6%9C%BA/</guid>
      <description>1、编辑 logind.conf 文件，命令如下
 sudo vim /etc/systemd/logind.conf
2、把所有相关 HandleLidSwitch 的值都改成 ignore
3、执行让修改的内容即时生效，输入命令：
systemctl restart systemd-logind
(实时生效命令可能不能用，我这边ubuntu20.04使用了之后不停卡登录界面)</description>
      <content>&lt;p&gt;1、编辑 logind.conf 文件，命令如下&lt;/p&gt;
&lt;p&gt;   sudo vim /etc/systemd/logind.conf&lt;/p&gt;
&lt;p&gt;2、把所有相关 HandleLidSwitch 的值都改成 ignore&lt;/p&gt;
&lt;p&gt;3、执行让修改的内容即时生效，输入命令：&lt;/p&gt;
&lt;p&gt;systemctl restart systemd-logind&lt;/p&gt;
&lt;p&gt;(实时生效命令可能不能用，我这边ubuntu20.04使用了之后不停卡登录界面)&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>自学 linux 命令</title>
      <link>https://kasusa.github.io/hugo/post/readme/</link>
      <pubDate>Sat, 29 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/readme/</guid>
      <description>sumatra PDF(pdf阅读器)   官方培训课程 电子书 提取码：65x8   实验楼
 控制台常用快捷键 一次性创建多个文件 常用通配符 创建和切换用户 文件和权限 创建文件和目录 复制文件/目录 删除文件 移动和重命名 linux文件目录结构  控制台常用快捷键    按键 作用     Ctrl+d 键盘输入结束或退出终端   Ctrl+s 暂停当前程序，暂停后按下任意键恢复运行   Ctrl+z 将当前程序放到后台运行，恢复到前台为命令fg   Ctrl+a 将光标移至输入行头，相当于Home键   Ctrl+e 将光标移至输入行末，相当于End键   Ctrl+k 删除从光标所在位置到行末   Alt+Backspace 向前删除一个单词   Shift+PgUp 将终端显示向上滚动   Shift+PgDn 将终端显示向下滚动    一次性创建多个文件 $ touch love_{1.</description>
      <content>&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sumatrapdfreader.org/free-pdf-reader.html&#34;&gt;sumatra PDF(pdf阅读器)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linuxprobe.com/training&#34;&gt;官方培训课程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pan.baidu.com/s/1plj-7aoB7E0GF1PfjKb5qw&#34;&gt;电子书&lt;/a&gt;
提取码：65x8&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;实验楼&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE&#34;&gt;控制台常用快捷键&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80%E6%AC%A1%E6%80%A7%E5%88%9B%E5%BB%BA%E5%A4%9A%E4%B8%AA%E6%96%87%E4%BB%B6&#34;&gt;一次性创建多个文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%B8%B8%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6&#34;&gt;常用通配符&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%9B%E5%BB%BA%E5%92%8C%E5%88%87%E6%8D%A2%E7%94%A8%E6%88%B7&#34;&gt;创建和切换用户&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E5%92%8C%E6%9D%83%E9%99%90&#34;&gt;文件和权限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95&#34;&gt;创建文件和目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6/%E7%9B%AE%E5%BD%95&#34;&gt;复制文件/目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6&#34;&gt;删除文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%A7%BB%E5%8A%A8%E5%92%8C%E9%87%8D%E5%91%BD%E5%90%8D&#34;&gt;移动和重命名&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84&#34;&gt;linux文件目录结构&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;控制台常用快捷键&#34;&gt;控制台常用快捷键&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+d&lt;/td&gt;
&lt;td&gt;键盘输入结束或退出终端&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+s&lt;/td&gt;
&lt;td&gt;暂停当前程序，暂停后按下任意键恢复运行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+z&lt;/td&gt;
&lt;td&gt;将当前程序放到后台运行，恢复到前台为命令fg&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+a&lt;/td&gt;
&lt;td&gt;将光标移至输入行头，相当于Home键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+e&lt;/td&gt;
&lt;td&gt;将光标移至输入行末，相当于End键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+k&lt;/td&gt;
&lt;td&gt;删除从光标所在位置到行末&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alt+Backspace&lt;/td&gt;
&lt;td&gt;向前删除一个单词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift+PgUp&lt;/td&gt;
&lt;td&gt;将终端显示向上滚动&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shift+PgDn&lt;/td&gt;
&lt;td&gt;将终端显示向下滚动&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;一次性创建多个文件&#34;&gt;一次性创建多个文件&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ touch love_{1..10}_shiyanlou.txt
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;常用通配符&#34;&gt;常用通配符&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;|	匹配 0 或多个字符
? |	匹配任意一个字符
[list] |	匹配 list 中的任意单一字符
[^list] |	匹配 除 list 中的任意单一字符以外的字符
[c1-c2] |	匹配 c1-c2 中的任意单一字符 如：[0-9][a-z]
{string1,string2,&amp;hellip;} |	匹配 string1 或 string2 (或更多)其一字符串
{c1..c2} |	匹配 c1-c2 中全部字符 如{1..10}&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;创建和切换用户&#34;&gt;创建和切换用户&lt;/h2&gt;
&lt;p&gt;创建用户(默认会让输入密码)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo adduser &amp;lt;USERNAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo passwd &amp;lt;USERNAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;切换用户&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;su &amp;lt;USERNAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看当前用户是谁&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;whoami
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看用户组&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat /etc/group | grep -E &amp;quot;&amp;lt;USERNAME&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;给新建的用户sudo权限(第二条是centos里面的情况。)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;usermod -G sudo &amp;lt;USERNAME&amp;gt;
usermod -aG wheel &amp;lt;USERNAME&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;删除用户(把它创建时自动创建的用户目录一并删除)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo deluser lilei --remove-home
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;adduser 和 useradd 的区别是什么&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;答：useradd 只创建用户，不会创建用户密码和工作目录，创建完了需要使用 passwd &lt;!-- raw HTML omitted --&gt; 去设置新用户的密码。adduser 在创建用户的同时，会创建工作目录和密码（提示你设置），做这一系列的操作。其实 useradd、userdel 这类操作更像是一种命令，执行完了就返回。而 adduser 更像是一种程序，需要你输入、确定等一系列操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;文件和权限&#34;&gt;文件和权限&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://doc.shiyanlou.com/linux_base/3-10.png/wm&#34; alt=&#34;图像权限&#34;&gt;
这个图是在使用&lt;code&gt;ls -l&lt;/code&gt;时候前部的意义。&lt;/p&gt;
&lt;p&gt;chmod 修改权限。每一个数字代表对应权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rwx|r-x|r-x
111|101|101 = 755
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;chown 修改所有者&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chown &amp;lt;usrname&amp;gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;创建文件和目录&#34;&gt;创建文件和目录&lt;/h2&gt;
&lt;p&gt;touch 可以创建文件/更新文件时间戳。
mkdir 可以创建目录
mkdir -p 可以创建多级目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; mkdir -p father/son/grandson
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;复制文件目录&#34;&gt;复制文件/目录&lt;/h2&gt;
&lt;p&gt;复制文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cp &amp;lt;文件&amp;gt; &amp;lt;目的地&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;复制目录&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-writer&#34; data-lang=&#34;writer&#34;&gt;cp &amp;lt;要复制的目录&amp;gt; &amp;lt;目的地&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;删除文件&#34;&gt;删除文件&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;rm &amp;lt;文件&amp;gt;
rm -r &amp;lt;目录&amp;gt;
rm -f &amp;lt;文件&amp;gt; (包括有写保护的文件)
rm -rf &amp;lt;任何东西&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;移动和重命名&#34;&gt;移动和重命名&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;mv &amp;lt;原文件&amp;gt; &amp;lt;新位置&amp;gt;
mv &amp;lt;原文件名&amp;gt; &amp;lt;新文件名字&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;批量重命名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rename &amp;lt;&#39;正则&#39;&amp;gt; &amp;lt;通配符&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;linux文件目录结构&#34;&gt;linux文件目录结构&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://doc.shiyanlou.com/linux_base/4-1.png/wm&#34; alt=&#34;目录结构&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;变量&#34;&gt;变量&lt;/h2&gt;
&lt;p&gt;声明变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;declare tmp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直接用=赋值同时也可以新建变量,注意不要在等号左右使用空格&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tmp=helloyou
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;拿出变量tmp&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo $tmp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;删除变量tmp&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;unset tmp
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;环境变量&#34;&gt;环境变量&lt;/h2&gt;
&lt;p&gt;暂时设置一个环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tmp=helloyuoman
export tmp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;永久设置一个环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/etc/bashrc         shell变量（有的 Linux 没有这个文件） 
/etc/profile        环境变量
/home/usr/.profile  用户变量
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;shiyanlou的环境用的是zsh命令行，在根目录有一个&lt;code&gt;.zshrc&lt;/code&gt;文件是初始化配置文件。
可以使用这句来把 /home/shiyanlou/mybin 添加到path中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意,这里是用的 &amp;raquo; 它意味&amp;quot;追加&amp;quot; , &amp;gt; 是覆盖的意思&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;PATH=$PATH:/home/shiyanlou/mybin&amp;quot; &amp;gt;&amp;gt; .zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直接刷新环境变量(无需开新的zsh)&lt;strong&gt;两种等效&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source .zshrc
. .zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;修改已有变量&#34;&gt;修改已有变量&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;变量设置方式&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;${变量名#匹配字串}&lt;/td&gt;
&lt;td&gt;从头向后开始匹配，删除符合匹配字串的最短数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名##匹配字串}&lt;/td&gt;
&lt;td&gt;从头向后开始匹配，删除符合匹配字串的最长数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名%匹配字串}&lt;/td&gt;
&lt;td&gt;从尾向前开始匹配，删除符合匹配字串的最短数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名%%匹配字串}&lt;/td&gt;
&lt;td&gt;从尾向前开始匹配，删除符合匹配字串的最长数据&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名/旧的字串/新的字串}&lt;/td&gt;
&lt;td&gt;将符合旧字串的第一个字串替换为新的字串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;${变量名//旧的字串/新的字串}&lt;/td&gt;
&lt;td&gt;将符合旧字串的全部字串替换为新的字串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;搜索文件&#34;&gt;搜索文件&lt;/h2&gt;
&lt;p&gt;whereis 简单快速&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;whereis 只能搜索二进制文件(-b)，man 帮助文件(-m)和源代码文件(-s)。如果想要获得更全面的搜索结果可以使用 locate 命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;locate快而全 使用要先安装,并且更新索引数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install locate
sudo updatedb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;find 超强大&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;寻找/etc中(包括子目录)名为的 sources.list文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;find /etc -name sources.list
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;配置主机名称&#34;&gt;配置主机名称&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;4.1.2 配置主机名称&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 Vim 编辑器修改“/etc/hostname”主机名称文件。&lt;/li&gt;
&lt;li&gt;把原始主机名称删除后追加你想要起的名字。注意，使用 Vim 编辑器修改主机名称文件后，要在末行模式下执行:wq!命令才能保存并退出文档。&lt;/li&gt;
&lt;li&gt;保存并退出文档，然后使用 hostname 命令检查是否修改成功。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;不好用的时候试着重新启动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;man-命令中常用按键以及用途&#34;&gt;man 命令中常用按键以及用途&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键&lt;/th&gt;
&lt;th&gt;用途&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;空格键&lt;/td&gt;
&lt;td&gt;向下翻一页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;从上至下搜索某个关键词，如“/linux”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;从下至上搜索某个关键词，如“?linux”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;定位到下一个搜索到的关键词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;定位到上一个搜索到的关键词&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;系统状态&#34;&gt;系统状态&lt;/h1&gt;
&lt;h2 id=&#34;ps-aux命令&#34;&gt;ps aux命令&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状态值&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;R（运行）&lt;/td&gt;
&lt;td&gt;进程正在运行或在运行队列中等待。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S（中断）&lt;/td&gt;
&lt;td&gt;进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该状态。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;D（不可中断）&lt;/td&gt;
&lt;td&gt;进程不响应系统异步信号，即便用 kill 命令也不能将其中断。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Z（僵死）&lt;/td&gt;
&lt;td&gt;进程已经终止，但进程描述符依然存在, 直到父进程调用 wait4()系统函数后将进程释放。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;T（停止）&lt;/td&gt;
&lt;td&gt;进程收到停止信号后停止运行。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果我们在系统终端中执行一个命令后想立即停止它，可以同时按下 &lt;code&gt; Ctrl + C&lt;/code&gt; 组合
键（生产环境中比较常用的一个快捷键），这样将立即终止该命令的进程。或者，如果
有些命令在执行时不断地在屏幕上输出信息，影响到后续命令的输入，则可以在执
行命令时在末尾添加上一个 &lt;code&gt;&amp;amp;&lt;/code&gt; 符号，这样命令将进入系统后台来执行。&lt;/p&gt;
&lt;h2 id=&#34;ifconfig-命令&#34;&gt;ifconfig 命令&lt;/h2&gt;
&lt;p&gt;ifconfig 命令用于获取网卡配置与网络状态等信息，格式为“ifconfig [网络设备] [参数]”。使用 ifconfig 命令来查看本机当前的网卡配置与网络状态等信息时，其实主要查看的就是网卡名称、inet 参数后面的 IP 地址、ether 参数后面的网卡物理地址（又称为 MAC 地址）&lt;/p&gt;
&lt;h2 id=&#34;uptime-命令&#34;&gt;uptime 命令&lt;/h2&gt;
&lt;p&gt;uptime 用于查看系统的负载信息，格式为 uptime。&lt;/p&gt;
&lt;p&gt;uptime 命令真的很棒，它可以显示当前系统时间、系统已运行时间、启用终端数量以及平均负载值等信息。平均负载值指的是系统在最近 1 分钟、5 分钟、15 分钟内的压力情况（下面加粗的信息部分）；负载值越低越好，尽量不要长期超过 1，在生产环境中不要
超过 5。&lt;/p&gt;
&lt;h2 id=&#34;uname--a&#34;&gt;uname -a&lt;/h2&gt;
&lt;p&gt;查看计算机的系统类型&lt;/p&gt;
&lt;h2 id=&#34;free--h&#34;&gt;free -h&lt;/h2&gt;
&lt;p&gt;查看内存&lt;/p&gt;
&lt;h2 id=&#34;last-命令&#34;&gt;last 命令&lt;/h2&gt;
&lt;p&gt;last 命令用于查看所有系统的登录记录，格式为“last [参数]”。&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;history&lt;/h2&gt;
&lt;p&gt;查看历史命令记录。
&lt;code&gt;history -c&lt;/code&gt; 清空记录&lt;/p&gt;
&lt;h1 id=&#34;切换目录&#34;&gt;切换目录&lt;/h1&gt;
&lt;h2 id=&#34;pwd-命令&#34;&gt;pwd 命令&lt;/h2&gt;
&lt;p&gt;pwd 命令用于显示用户当前所处的工作目录，格式为“pwd [选项]”。&lt;/p&gt;
&lt;h2 id=&#34;cd-命令&#34;&gt;cd 命令&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;cd&lt;/th&gt;
&lt;th&gt;命令用于切换工作路径，格式为“cd [目录名称]”。&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cd -&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;命令返回到上一次所处的目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cd ..&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;命令进入上级目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cd ~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;命令切换到当前用户的家目录，亦或使用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cd ~username&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;切换到其他用户的家目录。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;ls&#34;&gt;ls&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;~&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ls -a&lt;/td&gt;
&lt;td&gt;查看隐藏文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls -l&lt;/td&gt;
&lt;td&gt;查看文件详细信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls -la&lt;/td&gt;
&lt;td&gt;查看隐藏文件以及显示详细&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;查看文件&#34;&gt;查看文件&lt;/h1&gt;
&lt;h2 id=&#34;cat-命令&#34;&gt;cat 命令&lt;/h2&gt;
&lt;p&gt;用来查看比较小的文本文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat -n&lt;/code&gt;  查看文本内容时还想顺便显示行号
&lt;code&gt;tac&lt;/code&gt; 可以倒序输出文件.&lt;/p&gt;
&lt;h2 id=&#34;more-命令&#34;&gt;more 命令&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;more &amp;lt;文件名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;more更加适合阅读长文件&lt;/p&gt;
&lt;p&gt;可以使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;enter&lt;!-- raw HTML omitted --&gt; 向下一行&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;space&lt;!-- raw HTML omitted --&gt; 向下一屏&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;head-和-tail&#34;&gt;head 和 tail&lt;/h2&gt;
&lt;p&gt;默认查看文件头部/尾部的10行。参数 -n 可以控制行数。&lt;/p&gt;
&lt;p&gt;tail可以使用 -f 查看最新一行.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;head -n 1 &amp;lt;文件名&amp;gt;
tail -f &amp;lt;文件名&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;wc-命令&#34;&gt;wc 命令&lt;/h2&gt;
&lt;p&gt;wc 命令用于统计指定文本的行数、字数、字节数，格式为“wc [参数] 文本”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt; file&lt;/code&gt; 命令来查看文件类型&lt;/p&gt;
&lt;h2 id=&#34;压缩&#34;&gt;压缩&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tar -czvf 压缩包名称.tar.gz 要打包的目录&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;搜索&#34;&gt;搜索&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; 命令用于在文本中执行关键词搜索，并显示匹配的结果&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;~&lt;/th&gt;
&lt;th&gt;~&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-b&lt;/td&gt;
&lt;td&gt;将可执行文件（binary）当作文本文件（text）来搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-c&lt;/td&gt;
&lt;td&gt;仅显示找到的行数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-i&lt;/td&gt;
&lt;td&gt;忽略大小写&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td&gt;显示行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-v&lt;/td&gt;
&lt;td&gt;反向选择 — 仅列出没有“关键词”的行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;root@iZ2ze1hf17j9hv44rdpmaaZ:~# grep -n Jan you
2:-rw-r--r-- 1 root root   17 Jan 12  2000 kasusa
3:drwxr-xr-x 2 root root 4096 Jan 30 10:15 mydir
4:drwxr-xr-x 2 root root 4096 Jan 30 10:16 mydir2
5:drwxr-xr-x 2 root root 4096 Jan 30 11:47 ooo
6:-rw-r--r-- 1 root root    0 Jan 30 11:51 you 

# you是一个文件。用显示行号的模式在you里面寻找 Jan 关键字 。在控制台里面会有高亮显示

&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;别名&#34;&gt;别名&lt;/h2&gt;
&lt;p&gt;可以用 &lt;code&gt;alias&lt;/code&gt; 命令来创建一个属于自己的命令别名，格式为“&lt;code&gt;alias 别名=命令&lt;/code&gt;”。&lt;/p&gt;
&lt;p&gt;若要取消一个命令别名，则是用 unalias 命令，格式为“unalias 别名”。&lt;/p&gt;
&lt;h2 id=&#34;变量和全局&#34;&gt;变量和全局&lt;/h2&gt;
&lt;p&gt;一般来说，变量都是用大写的。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;有一些&lt;/th&gt;
&lt;th&gt;常用的全局变量：&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HOME&lt;/td&gt;
&lt;td&gt;用户的主目录（即家目录）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SHELL&lt;/td&gt;
&lt;td&gt;用户在使用的 Shell 解释器名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HISTSIZE&lt;/td&gt;
&lt;td&gt;输出的历史命令记录条数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HISTFILESIZE&lt;/td&gt;
&lt;td&gt;保存的历史命令记录条数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MAIL&lt;/td&gt;
&lt;td&gt;邮件保存路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LANG&lt;/td&gt;
&lt;td&gt;系统语言、语系名称&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RANDOM&lt;/td&gt;
&lt;td&gt;生成一个随机数字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PS1 Bash&lt;/td&gt;
&lt;td&gt;解释器的提示符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PATH&lt;/td&gt;
&lt;td&gt;定义解释器搜索用户执行命令的路径&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EDITOR&lt;/td&gt;
&lt;td&gt;用户默认的文本编辑器&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;自己创建一个变量/读取它：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@iZ2ze1hf17j9hv44rdpmaaZ:~# MYVAR=&amp;quot;hello&amp;quot;
root@iZ2ze1hf17j9hv44rdpmaaZ:~# echo &amp;quot;$MYVAR&amp;quot;
hello
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提升位全局变量：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@iZ2ze1hf17j9hv44rdpmaaZ:~# export MYVAR
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;vim&#34;&gt;VIM&lt;/h1&gt;
&lt;h2 id=&#34;vim-中常用的命令&#34;&gt;Vim 中常用的命令&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;dd&lt;/td&gt;
&lt;td&gt;删除（剪切）光标所在整行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5dd&lt;/td&gt;
&lt;td&gt;删除（剪切）从光标处开始的 5 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;yy&lt;/td&gt;
&lt;td&gt;复制光标所在整行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5yy&lt;/td&gt;
&lt;td&gt;复制从光标处开始的 5 行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;显示搜索命令定位到的下一个字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;显示搜索命令定位到的上一个字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;撤销上一步的操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;将之前删除（dd）或复制（yy）过的数据粘贴到光标后面&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;末行模式中可用的命令&#34;&gt;末行模式中可用的命令&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;要想切换到末行模式，在命令模式中输入一个冒号就可以了。&lt;/strong&gt;
末行模式主要用于保存或退出文件，以及设置 Vim 编辑器的工作环境，还可以让用户执
行外部的 Linux 命令或跳转到所编写文档的特定行数。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;:w&lt;/td&gt;
&lt;td&gt;保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:q&lt;/td&gt;
&lt;td&gt;退出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:q!&lt;/td&gt;
&lt;td&gt;强制退出（放弃对文档的修改内容）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:wq!&lt;/td&gt;
&lt;td&gt;强制保存退出&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:set&lt;/td&gt;
&lt;td&gt;nu 显示行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:set&lt;/td&gt;
&lt;td&gt;nonu 不显示行号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:命令&lt;/td&gt;
&lt;td&gt;执行该命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:整数&lt;/td&gt;
&lt;td&gt;跳转到该行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:s/one/two&lt;/td&gt;
&lt;td&gt;将当前光标所在行的第一个 one 替换成 two&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:s/one/two/g&lt;/td&gt;
&lt;td&gt;将当前光标所在行的所有 one 替换成 two&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:%s/one/two/g&lt;/td&gt;
&lt;td&gt;将全文中的所有 one 替换成 two&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;?字符串&lt;/td&gt;
&lt;td&gt;在文本中从下至上搜索该字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/字符串&lt;/td&gt;
&lt;td&gt;在文本中从上至下搜索该字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    </item>
    
    <item>
      <title>linux fun stuff</title>
      <link>https://kasusa.github.io/hugo/post/funstuff/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/funstuff/</guid>
      <description> cmatrix 黑客帝国命令行  </description>
      <content>&lt;ul&gt;
&lt;li&gt;cmatrix 黑客帝国命令行&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>魔板文件</title>
      <link>https://kasusa.github.io/hugo/post/aaaauntitled/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/post/aaaauntitled/</guid>
      <description></description>
      <content></content>
    </item>
    
    <item>
      <title>contact</title>
      <link>https://kasusa.github.io/hugo/contact/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/contact/</guid>
      <description>我的tg频道：
telegram: https://t.me/kasusaland
频道介绍里面有频道主的账号（就是我）</description>
      <content>&lt;p&gt;我的tg频道：&lt;/p&gt;
&lt;p&gt;telegram: &lt;a href=&#34;https://t.me/kasusaland&#34;&gt;https://t.me/kasusaland&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;频道介绍里面有频道主的账号（就是我）&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>中转站</title>
      <link>https://kasusa.github.io/hugo/links/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kasusa.github.io/hugo/links/</guid>
      <description>友链。   颜树人
https://yantree.github.io/
  Ediel&amp;rsquo;s Archive https://edchdx-tm.pwcq.dev/
  加入友链请想方设法联系我！ </description>
      <content>&lt;h2 id=&#34;友链&#34;&gt;友链。&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;颜树人&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yantree.github.io/&#34;&gt;https://yantree.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ediel&amp;rsquo;s Archive
&lt;a href=&#34;https://edchdx-tm.pwcq.dev/&#34;&gt;https://edchdx-tm.pwcq.dev/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;加入友链请u想方设法u联系我&#34;&gt;加入友链请&lt;!-- raw HTML omitted --&gt;想方设法&lt;!-- raw HTML omitted --&gt;联系我！&lt;/h3&gt;
</content>
    </item>
    
  </channel>
</rss>
